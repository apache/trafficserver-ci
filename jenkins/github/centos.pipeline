pipeline {
    agent {
        docker {
            image 'controller.trafficserver.org/ats/centos:8'
            registryUrl 'https://controller.trafficserver.org/'
            label 'docker'
        }
    }
    stages {
        stage('Clone') {
            steps {
                dir('src') {
                    echo "${sha1}"
                    checkout([$class: 'GitSCM',
                        branches: [[name: sha1]],
                        extensions: [],
                        //+refs/pull/${GITHUB_PR_NUMBER}/merge:refs/remotes/origin-pull/pull/${GITHUB_PR_NUMBER}/merge
                        userRemoteConfigs: [[url: github_url, refspec: '+refs/pull/*:refs/remotes/origin/pr/*']]])
                        //userRemoteConfigs: [[url: 'https://github.com/ezelkow1/trafficserver', refspec: '+refs/pull/*:refs/remotes/origin/pr/*']]])
                        //userRemoteConfigs: [[url: 'https://github.com/ezelkow1/trafficserver', refspec: '+refs/pull/${sha1}/merge:refs/remotes/origin/pull/${sha1}/merge']]])
                    sh 'head -1 README'
                }
                echo 'Finished Cloning'
            }
        }
        stage('Build') {
            steps {
                echo 'Starting build'
                dir('src') {
                    sh('head -1 README')
                    sh('source /opt/rh/gcc-toolset-9/enable')
                    sh('autoreconf -fiv')
                    sh('./configure --enable-experimental-plugins')
                    sh('make -j3')
                }
            }
        }
    }
    
    post { 
        cleanup { 
            cleanWs()
        }
    }
}
