pipeline {
    agent {
        docker {
            image 'ats/old_ci/fedora:30'
            //registryUrl 'https://controller.trafficserver.org/'
            args '-v /home/rooter/ccache:/tmp/ccache:rw'
            label 'linux'
        }
    }
    environment {
        CCACHE_DIR = "/tmp/ccache"
    }
    stages {
        stage('Clone') {
            steps {
                dir('src') {
                    
                    echo "${sha1}"
                    checkout([$class: 'GitSCM',
                        branches: [[name: sha1]],
                        extensions: [],
                        //+refs/pull/${GITHUB_PR_NUMBER}/merge:refs/remotes/origin-pull/pull/${GITHUB_PR_NUMBER}/merge
                        //userRemoteConfigs: [[url: 'https://github.com/ezelkow1/trafficserver', refspec: '+refs/pull/*:refs/remotes/origin/pr/*']]])
                        userRemoteConfigs: [[url: github_url, refspec: '+refs/pull/*:refs/remotes/origin/pr/*']]])

                        //userRemoteConfigs: [[url: 'https://github.com/ezelkow1/trafficserver', refspec: '+refs/pull/${sha1}/merge:refs/remotes/origin/pull/${sha1}/merge']]])
                    sh 'head -1 README'
                }
                echo 'Finished Cloning'
            }
        }
        stage('Build') {
            steps {
                echo 'Starting build'
                dir('src') {
                    //sh('source ci/jenkins/bin/environment.sh && source ci/jenkins/bin/build.sh && ~jenkins/bin/regression.sh')
                    sh('head -1 README')
                    //sh('autoreconf -fiv')
                    //sh('./configure --enable-experimental-plugins')
                    //sh('./configure')
                    //sh('make -j3')
                }
            }
        }
    }
    post { 
        cleanup { 
            cleanWs()
        }
    }
}
