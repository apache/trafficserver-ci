pipeline {
    agent {label 'freebsd'}
    stages {
        stage('Clone') {
            steps {
                dir('src') {
                    echo "${sha1}"
                    checkout([$class: 'GitSCM',
                        branches: [[name: sha1]],
                        extensions: [
                            // We have to set an idenity for the merge step because Git requires
                            // the user.name and user.email to be set to do a merge.
                            [$class: "UserIdentity",
                                name: "ATS CI User",
                                email: "noreply@trafficserver.apache.org"
                            ],
                            [$class: "PreBuildMerge",
                                options: [
                                    mergeTarget: "${GITHUB_PR_TARGET_BRANCH}",
                                    fastForwardMode: "NO_FF",
                                    mergeRemote: "origin",
                                    mergeStrategy: "DEFAULT"
                                ]
                            ],
                        ],
                        userRemoteConfigs: [[url: github_url, refspec: '+refs/pull/*:refs/remotes/origin/pr/*']]])
                    sh 'git show -n 10 --decorate --graph --oneline --no-patch'
                }
                echo 'Finished Cloning'
            }
        }
        stage('Build') {
            steps {
                echo 'Starting build'
                dir('src') {
                    sh '''#!/bin/bash

                        set -x
                        set -e

                        # `1 -eq 0`: Avoid doing cmake builds for freebsd until we install cmake on the CI boxes.
                        if [ 1 -eq 0 -a -d cmake ]
                        then
                            cmake -B cmake-build-release -DBUILD_EXPERIMENTAL_PLUGINS=ON -DCMAKE_INSTALL_PREFIX=/tmp/ats
                            cmake --build cmake-build-release -v
                        else
                            # Pre 10.x branches only support autotools.
                            autoreconf -fiv
                            ./configure --enable-experimental-plugins
                            gmake -j3
                        fi
                        '''
                }
            }
        }
    }

    post {
        cleanup {
            cleanWs()
        }
    }
}
