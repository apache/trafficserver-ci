pipeline {
    agent {label 'freebsd'}
    stages {
        stage('Clone') {
            steps {
                dir('src') {
                    echo "${sha1}"
                    checkout([$class: 'GitSCM',
                        branches: [[name: sha1]],
                        extensions: [],
                        //+refs/pull/${GITHUB_PR_NUMBER}/merge:refs/remotes/origin-pull/pull/${GITHUB_PR_NUMBER}/merge
                        userRemoteConfigs: [[url: github_url, refspec: '+refs/pull/*:refs/remotes/origin/pr/*']]])
                        //userRemoteConfigs: [[url: 'https://github.com/ezelkow1/trafficserver', refspec: '+refs/pull/*:refs/remotes/origin/pr/*']]])
                        //userRemoteConfigs: [[url: 'https://github.com/ezelkow1/trafficserver', refspec: '+refs/pull/${sha1}/merge:refs/remotes/origin/pull/${sha1}/merge']]])
                }
                echo 'Finished Cloning'
            }
        }
        stage('Build') {
            steps {
                echo 'Starting build'
                dir('src') {
                    sh '''#!/bin/bash

                        set -x
                        set -e

                        # We do not support CMake builds for the 9.x branch.
                        if [ "${GITHUB_PR_TARGET_BRANCH}" == "9.0.x" -o \
                             "${GITHUB_PR_TARGET_BRANCH}" == "9.1.x" -o \
                             "${GITHUB_PR_TARGET_BRANCH}" == "9.2.x" ]
                        then
                            autoreconf -fiv
                            ./configure --enable-experimental-plugins
                            gmake -j3
                        else
                            cmake -B cmake-build-release -DBUILD_EXPERIMENTAL_PLUGINS=ON -DCMAKE_INSTALL_PREFIX=/tmp/ats
                            cmake --build cmake-build-release -v
                        fi
                        '''
                }
            }
        }
    }

    post {
        cleanup {
            cleanWs()
        }
    }
}
